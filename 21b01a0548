1 question:

import math
def getDivisors(num):
	n=math.ceil(math.sqrt(num))
	total=1
	divisor=2
	while(divisor<n):
		if(num%divisor==0):
			total+=divisor
			total+=num//divisor
		divisor+=1
	return total
n=int(input('enter the number'))
print('1 is deficient number and sum is 0')
for i in range (2,n+1):
	t=getDivisors(i)
	if(t==i):
		print(i,'is perfect number and sum is',t)
	elif(t<i):
		print(i,'is deficient number and sum is',t)
	else:
		print(i,'is abundant number sum is',t)
    
    2 question:
    2(a)

# Python Program to Print Floyd's Triangle
rows = int(input("Please Enter the total Number of Rows : "))
number = 1

print("Floyd's Triangle")
for i in range(1, rows + 1):
  for j in range(1, i + 1):
    print(number, end = ' ')
    number = number + 1
  print()
  
2(b)
 
no_heaps = int(input("Enter no of pubble heaps"))
heaps = no_heaps
if(no_heaps % 2 == 0):
  while(no_heaps > 0):
    print(heaps)
    heaps = heaps + 2
    no_heaps = no_heaps - 1
else:
  while(no_heaps > 0):
    print(heaps)
    heaps = heaps + 2
    no_heaps = no_heaps - 1
  
8 question:
lst=[[1,2,6],[1,3,4,5,7,8],[1,3,5,6,8,9],[1,5,7,11],[1,4,7,5,8,12]]
nw_lst=[]
q=[]
nk=[]
nr=[]
dic={}
for i in lst:
  for j in i:
    nw_lst.append(j)
nw_lst.sort()   
for i in nw_lst :
 x=nw_lst.count(i)
 dic.update({i:x})
q=list(dic.values())
q.sort()
for i in range(8,11):
 for k in dic.keys():
  if (dic[k]==q[i]):
   nk.append(k)
   nr.append(q[i])
   break
print(nk[::-1])
print(nr[::-1])
